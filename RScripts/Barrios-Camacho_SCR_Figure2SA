library("DESeq2")
library("dplyr")
library("ggplot2")
library("apeglm")
library("pheatmap")
library("edgeR")

#### loading non-normalized counts

raw_counts_final <- read.csv("ActivationPaper_raw_counts_newalignment.csv", row.names=1)
meta <- read.csv("ActivationPaper_metadata.csv", row.names = 1)

### Check that sample names match in both files
all(colnames(raw_counts_final) %in% rownames(meta))
all(colnames(raw_counts_final) == rownames(meta))  

### creating deseq2 object

dds <- DESeqDataSetFromMatrix(countData = raw_counts_final, 
                              colData = meta, design = ~ condition)

###### Count Normalization - sample level metrics

dds <- estimateSizeFactors(dds)
sizeFactors(dds)

### Extracting the normalized counts

normalized_counts <- counts(dds, normalized=TRUE)
write.csv(normalized_counts, "normalized_counts.csv")

############### QC situations

vsd <- vst(dds, blind=TRUE)
vsd_mat <- assay(vsd)
vsd_cor <- cor(vsd_mat)

View(vsd_cor)
pheatmap(vsd_cor, annotation = select(meta, condition))

#### PCA analysis


plot <- plotPCA(vsd, intgroup = "condition")
plot + theme_linedraw() + ylim(c(-40, 40)) 

finalPCA<- plot + theme(
  panel.border = element_rect(colour = "black", fill=NA, size=1),  
  panel.background = element_blank(),
) + ylim(c(-25, 25)) 

ggsave(filename="ActivationPaper_FigureS2A.png", plot=finalPCA, device="png",
       height=5, width=5, units="in", dpi=1000)

res.pca <- prcomp(normalized_counts, intgroup = "condition")



#### dds 


dds_final <- DESeq(dds)

#### how well did the data fit the model? (mean-variance relationship)

plotDispEsts(dds_final)


####
resultsV_6hpt <- results(dds_final, contrast = c("condition", "6hpt", "vehicle"), 
                         alpha=0.05)

resultsV_12hpt <- results(dds_final, contrast = c("condition", "12hpt", "vehicle"), 
                          alpha=0.05)

results6_12hpt <- results(dds_final, contrast = c("condition", "12hpt", "6hpt"), 
                          alpha=0.05)


activation_12hpt <- data.frame(resultsV_12hpt)
activation_6hpt <- data.frame(resultsV_6hpt)
activation_12hpt6hpt <- data.frame(results6_12hpt)

activation_12hpt_subetted <- subset(activation_12hpt, padj < 0.05)
activation_6hpt_subsetted <- subset(activation_6hpt, padj < 0.05)
activation_12hpt6hpt_subsetted <- subset(activation_12hpt6hpt, padj < 0.05)



write.csv(activation_12hpt_subetted,"activation_12hpt_subsetted.csv")
write.csv(activation_6hpt_subsetted, "activation_6hpt_subsetted.csv")
write.csv(activation_12hpt6hpt_subsetted, "activation_12hpt6hpt_subsetted.csv")



activation_12hpt_subetted_list <-read.csv("activation_12hpt_subsetted.csv", header=TRUE)
activation_6hpt_subetted_list <-read.csv("activation_6hpt_subsetted.csv", header=TRUE)
activation_12hpt6hpt_subetted_list <-read.csv("activation_12hpt6hpt_subsetted.csv", header=TRUE)
